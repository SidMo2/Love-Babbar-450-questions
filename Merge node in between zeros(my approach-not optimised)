/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void insertAtEnd(ListNode* &ans,int val){
        ListNode* curr=new ListNode(val);
        if(ans==NULL){
            ans=curr;
            return;
        }
        ListNode* temp=ans;
        while(temp->next!=NULL){
            temp=temp->next;
        }
        temp->next=curr;
    }
    ListNode* mergeNodes(ListNode* head) {
        int sum=0;
        ListNode* ans=new ListNode(-1);
        ListNode* nxt=ans;
        ListNode* current=head->next;
        while(current!=NULL){
            if(current->val!=0){
                sum+=current->val;
            }
            else{
                insertAtEnd(ans,sum);
                sum=0;
            }
            current=current->next;
        }
        return ans->next;
    }
};
