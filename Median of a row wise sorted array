// { Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
//User function template for C++

class Solution{   
public:
    int countSmallerThanEqualTo(vector<int>matrix,int mid){
        int low=0;
        int high=matrix.size()-1;
        int m=(low+high)/2;
        while(low<high){
            if(matrix[m]<=mid){
                low=m+1;
            }
            else{
                high=m-1;
            }
        }
        return low;
    }
    int median(vector<vector<int>> &matrix, int r, int c){
        // code here  
        int max= INT_MIN;
        int min= INT_MAX;
        for(int i=0;i<r;i++){
            if(matrix[i][0]<min){
                min=matrix[i][0];
            }
        }
        for(int i=0;i<r;i++){
            if(matrix[i][c-1]>max){
                max=matrix[i][c-1];
            }
        }
        int desired_count=(r*c)/2;
        while(min<max){
            int mid=(max+min)/2;
            int count=0;
            for(int i=0;i<r;i++){
                count+=countSmallerThanEqualTo(matrix[i],mid);
            }
            if(count<=desired_count){
                min=mid+1;
            }
            else{
                max=mid-1;
            }
        }
        return min;
    }
};

// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int r, c;
        cin>>r>>c;
        vector<vector<int>> matrix(r, vector<int>(c));
        for(int i = 0; i < r; ++i)
            for(int j = 0;j < c; ++j)
                cin>>matrix[i][j];
        Solution obj;
        cout<<obj.median(matrix, r, c)<<endl;        
    }
    return 0;
}  // } Driver Code Ends
